# services:
#   - postgres:latest

# variables:
#   POSTGRES_DB: TestTestTest
#   POSTGRES_USER: postgres
#   POSTGRES_PASSWORD: 123456789
#   DATABASE_URL: "Host=postgres;Port=5432;Username=postgres;Password=123456789;Database=TestTestTest"

# stages:
#   - build
#   - unit-tests

# mybuild:
#   image: mcr.microsoft.com/dotnet/sdk:8.0
#   stage: build
#   tags:
#     - iu7runner
#   script:
#     - dotnet publish backend/backend/backend.csproj -c Release -o srcPublish

#   artifacts:
#     expire_in: 1 hour
#     when: on_success
#     paths:
#       - srcPublish
# image: docker:latest

# services:
#   - docker:dind

# variables:
#   DOCKER_DRIVER: overlay2

# before_script:
#   - docker info
#   - docker-compose --version

# stages:
#   - build
#   - deploy

# build:
#   stage: build
#   script:
#     - docker-compose -f docker-compose.yml build

# deploy:
#   stage: deploy
#   script:
#     - docker-compose -f docker-compose.yml up -d
#   only:
#     - master # или другая ветка, на которую вы хотите запускать деплой

stages:
  - build
  - test
  # - deploy

build-backend:
  stage: build
  tags:
    - build
  script:
    - cd backend/
    - dotnet publish -f net8.0 -c Release -o ./build
  artifacts:
    untracked: false
    when: on_success
    expire_in: "1 hour"
    paths:
      - backend/build

build-frontend:
  stage: build
  tags:
    - build
  script:
    - cd frontend && npm install && npm run build
  artifacts:
    untracked: false
    when: on_success
    expire_in: "1 hour"
    paths:
      - frontend/build

test-backend-unit-bl:
  stage: test
  tags:
    - test
  script:
    - cd frontend/
    - npm test
# deploy:
#   stage: deploy
#   tags:
#     - deploy
#   script:
#     - sshpass -p $PROD_PASSWORD rsync -e "ssh -o StrictHostKeyChecking=no" -a backend/build/ $PROD_USER@$PROD_HOST:/var/opt/app
#     - sshpass -p $PROD_PASSWORD rsync -e "ssh -o StrictHostKeyChecking=no" -a --delete frontend/build/ $PROD_USER@$PROD_HOST:/var/www/site
#     - echo $PROD_PASSWORD | sshpass -p $PROD_PASSWORD ssh $PROD_USER@$PROD_HOST sudo -S systemctl restart servering-backend.service
#   rules:
#     - if: '$CI_COMMIT_REF_NAME == "dev" || $CI_COMMIT_REF_NAME == "main"'
#       when: manual
#     - when: never
